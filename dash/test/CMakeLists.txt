project(project_dash_test CXX)

# Load global build settings
set(DASH_DART_IF_INCLUDE_DIR ${DASH_DART_IF_INCLUDE_DIR} 
    PARENT_SCOPE)
set(DART_IMPLEMENTATIONS_LIST ${DART_IMPLEMENTATIONS_LIST} 
    PARENT_SCOPE)
set(BUILD_EXAMPLES ${BUILD_EXAMPLES}
    PARENT_SCOPE)
set(BUILD_TESTS ${BUILD_TESTS}
    PARENT_SCOPE)
set(ENABLE_LOGGING ${ENABLE_LOGGING}
    PARENT_SCOPE)
set(ENABLE_TRACE_LOGGING ${ENABLE_TRACE_LOGGING}
    PARENT_SCOPE)
set(PAPI_FOUND ${PAPI_FOUND}
    PARENT_SCOPE)
set(PAPI_INCLUDE_DIRS ${PAPI_INCLUDE_DIRS}
    PARENT_SCOPE)
set(PAPI_LIBRARIES ${PAPI_LIBRARIES}
    PARENT_SCOPE)

# Source- and header files to be compiled (OBJ):
file(GLOB_RECURSE DASH_TEST_SOURCES
     "./*.c" "./*.h" "./*.cc" "./*.cpp")


set (ADDITIONAL_COMPILE_FLAGS "-DDASH")
set (ADDITIONAL_INCLUDES      "")
set (ADDITIONAL_LIBRARIES     "")

if (MEMORY_MODEL_UNIFIED)
  set (ADDITIONAL_COMPILE_FLAGS
       "${ADDITIONAL_COMPILE_FLAGS} -DDASH_UNIFIED_MEMORY_MODEL")
endif()
if (ENABLE_LOGGING)
  set (ADDITIONAL_COMPILE_FLAGS
       "${ADDITIONAL_COMPILE_FLAGS} -DDASH_ENABLE_LOGGING")
endif()
if (ENABLE_TRACE_LOGGING)
  set (ADDITIONAL_COMPILE_FLAGS
       "${ADDITIONAL_COMPILE_FLAGS} -DDASH_ENABLE_TRACE_LOGGING")
endif()
if (PAPI_FOUND)
  set (ADDITIONAL_COMPILE_FLAGS
       "${ADDITIONAL_COMPILE_FLAGS} -DDASH_ENABLE_PAPI")
  set (ADDITIONAL_INCLUDES ${ADDITIONAL_INCLUDES}
       ${PAPI_INCLUDE_DIRS})
  set (ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES}
       ${PAPI_LIBRARIES})
else()
  set (ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES}
       rt)
endif()

include(${CMAKE_SOURCE_DIR}/CMakeExt/GoogleTest.cmake)

foreach(dart_variant ${DART_IMPLEMENTATIONS_LIST})
  set(DASH_LIBRARY "dash-${dart_variant}")
  set(DART_LIBRARY "dart-${dart_variant}")
  set(DASH_TEST "dash-test-${dart_variant}")
  string(TOUPPER ${dart_variant} dart_variant_caps)
  message(INFO "Building DASH unit tests with backend " ${dart_variant_caps})
  include_directories(
    ${GTEST_INCLUDES}
    ${CMAKE_SOURCE_DIR}/dash/include
    ${ADDITIONAL_INCLUDES}
  )
  add_executable(
    ${DASH_TEST}
    ${DASH_TEST_SOURCES}
  )
  target_link_libraries(
    ${DASH_TEST}
    GTest
    ${DASH_LIBRARY}
    ${DART_LIBRARY}
    ${ADDITIONAL_LIBRARIES}
  )
  set_target_properties(
    ${DASH_TEST} PROPERTIES
    COMPILE_FLAGS ${ADDITIONAL_COMPILE_FLAGS}
  )
  set_target_properties(
    ${DASH_TEST} PROPERTIES
    CXX_STANDARD 11
  )
  set_target_properties(
    ${DASH_TEST} PROPERTIES
    CXX_STANDARD_REQUIRED 11
  )
  # Installation
  DeployBinary(${DASH_TEST})
  install(
    TARGETS ${DASH_TEST}
    DESTINATION bin/dash/test/${dart_variant})
endforeach(dart_variant ${DART_IMPLEMENTATIONS_LIST})
